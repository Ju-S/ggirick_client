<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Board">
    <!-- (to, from) 페이징 게시글 목록 게시 순서대로 select (검색을 위한 필터 설정 - title, writer) -->
    <!-- board_group_id에 대한 설정까지 필요 -->
    <select id="getList" resultType="com.kedu.ggirick_client_backend.dto.board.BoardDTO">
        SELECT *
        FROM (
        SELECT ROWNUM rm,
        a.*
        FROM (
        SELECT b.id,
        b.writer,
        b.title,
        b.board_group_id,
        b.created_at,
        b.view_count,
        e.name,
        COUNT(DISTINCT bf.id) AS file_count,
        COUNT(DISTINCT bc.id) AS comment_count
        FROM board b
        JOIN employee e ON b.writer = e.id
        LEFT JOIN board_file bf ON b.id = bf.board_id
        LEFT JOIN board_comment bc ON b.id = bc.board_id
        WHERE b.board_group_id = #{boardGroupId} AND b.is_notification='N'
        <if test="searchQuery != null and searchQuery != ''">
            AND
            <choose>
                <when test="searchFilter == 1">
                    b.title like '%'||#{searchQuery}||'%'
                </when>
                <when test="searchFilter == 2">
                    b.contents like '%'||#{searchQuery}||'%'
                </when>
                <when test="searchFilter == 3">
                    e.name like '%'||#{searchQuery}||'%'
                </when>
                <otherwise>
                    (b.title like '%'||#{searchQuery}||'%' OR
                    e.name like '%'||#{searchQuery}||'%' OR
                    b.contents like '%'||#{searchQuery}||'%')
                </otherwise>
            </choose>
        </if>
        GROUP BY b.id, b.writer, b.title, b.created_at, b.view_count, b.board_group_id, e.name
        ORDER BY b.created_at DESC
        ) a
        WHERE ROWNUM&lt;=#{to}
        )
        WHERE rm&gt;=#{from}
    </select>

    <!-- 공지 게시글만 조회 -->
    <select id="getNotificationList" resultType="com.kedu.ggirick_client_backend.dto.board.BoardDTO">
        SELECT *
        FROM (SELECT ROWNUM rm,
                     a.*
              FROM (SELECT b.id,
                           b.writer,
                           b.title,
                           b.created_at,
                           b.view_count,
                           b.board_group_id,
                           e.name,
                           COUNT(DISTINCT bc.id) AS comment_count,
                           COUNT(DISTINCT bf.id) AS file_count
                    FROM board b
                             JOIN employee e ON b.writer = e.id
                             LEFT JOIN board_file bf ON b.id = bf.board_id
                             LEFT JOIN board_comment bc ON b.id = bc.board_id
                    WHERE b.board_group_id = #{groupId}
                      AND is_notification = 'Y'
                    GROUP BY b.id, b.writer, b.title, b.created_at, b.view_count, b.board_group_id, e.name
                    ORDER BY b.created_at DESC) a)
    </select>

    <!-- 선택된 게시글의 내용 select -->
    <select id="getById" resultType="com.kedu.ggirick_client_backend.dto.board.BoardDTO">
        SELECT b.*, e.name
        FROM board b
                 JOIN employee e ON b.writer = e.id
        WHERE b.id = #{id}
    </select>

    <!-- 총 게시물의 갯수 조회 -->
    <select id="getBoardCount" resultType="int">
        SELECT count(*) FROM board b
        JOIN employee e ON b.writer=e.id
        WHERE board_group_id = #{boardGroupId} AND is_notification='N'
        <if test="searchQuery != null and searchQuery != ''">
            AND
            <choose>
                <when test="searchFilter == 1">
                    b.title like '%'||#{searchQuery}||'%'
                </when>
                <when test="searchFilter == 2">
                    b.contents like '%'||#{searchQuery}||'%'
                </when>
                <when test="searchFilter == 3">
                    e.name like '%'||#{searchQuery}||'%'
                </when>
                <otherwise>
                    (b.title like '%'||#{searchQuery}||'%' OR
                    e.name like '%'||#{searchQuery}||'%' OR
                    b.contents like '%'||#{searchQuery}||'%')
                </otherwise>
            </choose>
        </if>
    </select>

    <!-- 게시글 등록 -->
    <!-- 파일 등록을 위한 selectKey -->
    <insert id="posting">
        INSERT INTO board(id, writer, title, contents, board_group_id, is_notification)
        VALUES (board_seq.nextval, #{writer}, #{title}, #{contents}, #{boardGroupId},
        <choose>
            <when test="isNotification == true">'Y'</when>
            <otherwise>'N'</otherwise>
        </choose>
        )
        <selectKey resultType="int" keyProperty="id" order="AFTER">
            select board_seq.currval from dual
        </selectKey>
    </insert>

    <!-- 게시글 삭제 -->
    <delete id="deleteById">
        DELETE
        FROM board
        WHERE id = #{id}
    </delete>

    <!-- 게시글 수정(제목, 내용만 수정 가능) -->
    <update id="updateById">
        UPDATE board SET title = #{title}, contents = #{contents}, is_notification =
        <choose>
            <when test="isNotification == true">'Y'</when>
            <otherwise>'N'</otherwise>
        </choose>
        WHERE id = #{id}
    </update>

    <!-- 게시글 조회수 증가 -->
    <update id="increaseViewCount">
        UPDATE board
        SET view_count = view_count + 1
        WHERE id = #{id}
    </update>
</mapper>